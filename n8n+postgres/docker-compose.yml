services:

  postgres:
    image: postgres:11
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - ./.n8n/db:/var/lib/postgresql/data:rw
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    image: n8nio/n8n:1.99.0
    restart: unless-stopped
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_EDITOR_BASE_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PUSH_BACKEND=${N8N_PUSH_BACKEND}
      - N8N_EMAIL_MODE=${N8N_EMAIL_MODE}
      - N8N_SMTP_HOST=${N8N_SMTP_HOST}
      - N8N_SMTP_PORT=${N8N_SMTP_PORT}
      - N8N_SMTP_USER=${N8N_SMTP_USER}
      - N8N_SMTP_PASS=${N8N_SMTP_PASS}
      - N8N_SMTP_SENDER=${N8N_SMTP_SENDER}
      - N8N_SMTP_SSL=${N8N_SMTP_SSL}
      - N8N_PUSH_BACKEND=sse
      - N8N_PROXY_HOPS=1
      - NODE_FUNCTION_ALLOW_EXTERNAL=crypto-js
      - NODE_OPTIONS=--max_old_space_size=8000
      - N8N_DEFAULT_BINARY_DATA_MODE=filesystem
      #- N8N_ENCRYPTION_KEY=24g3aOMEelZdclCd/R/0uO/CdO1nesBh4049M1sfcD4=
    ports:
      - ${N8N_PORT}:5678
    links:
      - postgres
    volumes:
      - ./.n8n/n8n:/home/node/.n8n
        # clave ssh del server, tiene que estar creada y agregaga a gitlab
      - /root/.ssh:/home/node/.ssh
        # es el repo donde se suben los workflows de este projecto
      - /root/automate-workflows:/data/automate-workflows
      - ./claves:/home/node/claves
    depends_on:
      postgres:
        condition: service_healthy

  redis:
    image: 'redis:6.0-alpine'
    container_name: redis
    restart: unless-stopped
    volumes:
        - ./redis:/data
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
